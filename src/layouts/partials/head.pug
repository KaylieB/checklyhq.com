doctype html
html(lang='en')
    head
        title !{'{{ if .IsHome }}{{ .Site.Title }}{{ else }}{{ .Title }} | Checkly {{ end }}'}
        meta(charset='utf-8')
        meta(name='description' content='{{.Description | default .Site.Params.Description}}')
        meta(name='viewport' content='width=device-width', initial-scale=1, maximum-scale=1, user-scalable=no)

        meta(property='og:type' content='article')
        meta(property='og:title' content='{{ if .IsHome }}{{ .Site.Title }}{{ else }}{{ .Title }} | Checkly {{ end }}')
        meta(property='og:description' content='{{ with .Description }}{{ . }}{{ else }}{{if .IsPage}}{{ .Summary }}{{ else }}{{ with .Site.Params.description }}{{ . }}{{ end }}{{ end }}{{ end }}')
        //meta(property='og:image' content='https://checklyhq.com/images/dashboard-screen@2x.png')
        meta(property='og:type' content='{{ if .IsPage }}article{{ else }}website{{ end }}')

        meta(property='og:image' content='{{ if .IsPage }}{{ with .Params.featured_image }}{{ . }}{{end}}{{ else}}https://checklyhq.com/images/dashboard-screen@2x.png{{end}}')

        meta(property='twitter:card' content='summary')
        meta(property='twitter:title' content='{{ if .IsHome }}{{ .Site.Title }}{{ else }}{{ .Title }} | Checkly {{ end }}')
        meta(property='twitter:description' content='{{ with .Description }}{{ . }}{{ else }}{{if .IsPage}}{{ .Summary }}{{ else }}{{ with .Site.Params.description }}{{ . }}{{ end }}{{ end }}{{ end }}')
        meta(property='twitter:image' content='https://checklyhq.com/images/dashboard-screen@2x.png')

        link(rel='icon' type='image/png' href='/images/racoon_favicon.png')
        link(rel='alternate' href='{{ .Permalink }}' hreflang='en-us')
        link(rel='canonical' href='{{ .Permalink }}')

        // main styles
        link(rel='stylesheet' href='/css/style.css')

        // OneTrust Cookies Consent Notice (Production CDN, checklyhq.com, en-GB)
        if process.env.NODE_ENV === 'production'
          script(src="https://cdn.cookielaw.org/consent/e4c8a868-c0ad-4c0c-b61e-f6eb6cad2810.js" type="text/javascript" charset="UTF-8")
          script(type="text/javascript")
            | function OptanonWrapper() { }

        style
          | .qc-cmp-ui {
          |   background-color: #45c8f1 !important;
          | }
          | .qc-cmp-publisher-purposes-table .qc-cmp-table-header {
          |   background-color: #fafafa !important;
          | }
          | .qc-cmp-publisher-purposes-table .qc-cmp-table-row {
          |   background-color: #ffffff !important;
          | }


        // Global site tag (gtag.js) - Google Analytics
        script(async src="https://www.googletagmanager.com/gtag/js?id=UA-110523681-1")
        script
            |   window.dataLayer = window.dataLayer || [];
            |   function gtag(){dataLayer.push(arguments);}
            |   gtag('js', new Date());
            |   gtag('config', 'UA-110523681-1');

        // Drift code

        script
            |if (location.host === 'checklyhq.com') {
            | !(function () {
            |   var t = window.driftt = window.drift = window.driftt || []
            |   if (!t.init) {
            |     if (t.invoked) return void (window.console && console.error && console.error('Drift snippet included twice.'))
            |     t.invoked = !0, t.methods = [ 'identify', 'config', 'track', 'reset', 'debug', 'show', 'ping', 'page', 'hide', 'off', 'on' ],
            |     t.factory = function (e) {
            |       return function () {
            |         var n = Array.prototype.slice.call(arguments)
            |         return n.unshift(e), t.push(n), t
            |       }
            |     }, t.methods.forEach(function (e) {
            |       t[e] = t.factory(e)
            |     }), t.load = function (t) {
            |       var e = 3e5, n = Math.ceil(new Date() / e) * e, o = document.createElement('script')
            |       o.type = 'text/javascript', o.async = !0, o.crossorigin = 'anonymous', o.src = 'https://js.driftt.com/include/' + n + '/' + t + '.js'
            |       var i = document.getElementsByTagName('script')[0]
            |       i.parentNode.insertBefore(o, i)
            |     }
            |   }
            | }())
            | drift.SNIPPET_VERSION = '0.3.1'
            | drift.load('7bxit3egu3zv')
            |}

        // Heap tracking code
        script
            | if (location.host === 'checklyhq.com') {
            |   window.heap=window.heap||[],heap.load=function(e,t){window.heap.appid=e,window.heap.config=t=t||{};var r=t.forceSSL||"https:"===document.location.protocol,a=document.createElement("script");a.type="text/javascript",a.async=!0,a.src=(r?"https:":"http:")+"//cdn.heapanalytics.com/js/heap-"+e+".js";var n=document.getElementsByTagName("script")[0];n.parentNode.insertBefore(a,n);for(var o=function(e){return function(){heap.push([e].concat(Array.prototype.slice.call(arguments,0)))}},p=["addEventProperties","addUserProperties","clearEventProperties","identify","removeEventProperty","setEventProperties","track","unsetEventProperty"],c=0;c<p.length;c++)heap[p[c]]=o(p[c])};
            |   heap.load("3553865455");
            | }
        // Hotjar
        script
            | if (location.host === 'checklyhq.com') {
            |   (function(h,o,t,j,a,r){
            |   h.hj=h.hj || function () {
            |     (h.hj.q = h.hj.q || []).push(arguments)
            |   };
            |   h._hjSettings={hjid: 717179, hjsv: 6};
            |   a=o.getElementsByTagName('head')[0];
            |   r=o.createElement('script');r.async=1;
            |   r.src=t + h._hjSettings.hjid + j + h._hjSettings.hjsv;
            |   a.appendChild(r);
            |   })(window,document,'https://static.hotjar.com/c/hotjar-','.js?sv=');
            | }
